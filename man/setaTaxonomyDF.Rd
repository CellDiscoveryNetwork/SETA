% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{setaTaxonomyDF}
\alias{setaTaxonomyDF}
\title{Build a Taxonomy Data Frame at Multiple Resolutions (Base R version)}
\usage{
setaTaxonomyDF(obj, resolution_cols = c("fine_type", "mid_type", "broad_type"))
}
\arguments{
\item{obj}{One of:
\itemize{
  \item A \strong{Seurat} object, with \code{@meta.data} containing columns
    named in \code{resolution_cols}.
  \item A \strong{SingleCellExperiment} object, with \code{colData()}
    containing columns named in \code{resolution_cols}.
  \item A long-form \code{data.frame}, with one row per cell, containing
    at least a \code{bc} column plus all columns in \code{resolution_cols}.
}}

\item{resolution_cols}{A character vector of colnames indicating different
resolutions of cell-type (or lineage) labels. The \strong{last} element in
this vector is treated as the "lowest-level" (finest) label, which will
become the row name of the returned data frame.}
}
\value{
A \code{data.frame} where each row is one unique value of the
  "lowest-level" label. The columns are all the entries in
  \code{resolution_cols}. Row names are set to the lowest-level label.
  If a single lowest-level label maps to multiple coarser-level labels,
  the function throws an error.
}
\description{
Given a Seurat object, SingleCellExperiment, or long-form \code{data.frame},
this function constructs a "taxonomy" data frame. Each row corresponds to
a unique "lowest-level" label, and each column is one resolution level
specified in \code{resolution_cols}. The last element of
\code{resolution_cols} is considered the "lowest-level" (finest) label,
which will become the row name of the returned data frame.
}
\examples{
# Long-form example
df_long <- data.frame(
    bc = paste0("cell", 1:6),
    fine_type = c("AlveolarType1","AlveolarType2","AlveolarType1",
                  "Fibroblast1","Fibroblast1","AlveolarType2"),
    mid_type  = c("Alveolar","Alveolar","Alveolar","Fibroblast",
                  "Fibroblast","Alveolar"),
    broad_type= c("Epithelial","Epithelial","Epithelial","Stromal",
                  "Stromal","Epithelial")
)

# Build a taxonomy data frame specifying fine->mid->broad hierarchy
taxDF <- setaTaxonomyDF(
    df_long,
    resolution_cols = c("fine_type","mid_type","broad_type")
)
taxDF

}
